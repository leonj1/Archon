name: Backend Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'python/**'
      - '.github/workflows/backend-tests.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'python/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: python
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build test image
      run: |
        docker build -f Dockerfile.test -t archon-test .
    
    - name: Run unit tests
      run: |
        docker run --rm \
          -e SUPABASE_URL=${{ secrets.TEST_SUPABASE_URL }} \
          -e SUPABASE_SERVICE_KEY=${{ secrets.TEST_SUPABASE_KEY }} \
          -e OPENAI_API_KEY=${{ secrets.TEST_OPENAI_API_KEY }} \
          -e LOGFIRE_ENABLED=false \
          archon-test \
          pytest -m unit -v --tb=short
    
    - name: Run integration tests
      if: github.event_name == 'push'  # Only run on push, not on PRs
      run: |
        docker run --rm \
          -e SUPABASE_URL=${{ secrets.TEST_SUPABASE_URL }} \
          -e SUPABASE_SERVICE_KEY=${{ secrets.TEST_SUPABASE_KEY }} \
          -e OPENAI_API_KEY=${{ secrets.TEST_OPENAI_API_KEY }} \
          -e LOGFIRE_ENABLED=false \
          archon-test \
          pytest -m integration -v --tb=short
    
    - name: Generate coverage report
      if: always()
      run: |
        docker run --rm \
          -v ${{ github.workspace }}/python/coverage:/app/coverage \
          -e SUPABASE_URL=${{ secrets.TEST_SUPABASE_URL }} \
          -e SUPABASE_SERVICE_KEY=${{ secrets.TEST_SUPABASE_KEY }} \
          -e OPENAI_API_KEY=${{ secrets.TEST_OPENAI_API_KEY }} \
          -e LOGFIRE_ENABLED=false \
          archon-test \
          pytest --cov=src --cov-report=xml:/app/coverage/coverage.xml --cov-report=term
    
    - name: Upload coverage to Codecov
      if: always()
      uses: codecov/codecov-action@v3
      with:
        file: ./python/coverage/coverage.xml
        flags: backend
        name: backend-coverage
